▶포인터
***원하는 주소값을 사용해야 함
1. 오직 주소만 받을 수 있다
2. 받은 주소의 값을 알 수 있다.
3. 받은 주소의 값을 변경할 수 있다.
4. 주소를 이동할 수 있다.


*포인터를 잘 못 쓰면 건들이면 안되는 자료도 건들여 버릴 수 있다.


right-left rule을 이용하라


int * p;		//int를 명시하는 이유는 몇바이트를 소모하는지 크기를 명확히 알기 위해
p=&a;
printf("%d %d"a,*p)		//a의 값과 p가 {가리키는} 값을 출력한다. *p = p[]



int * p;		//1차원 포인터
int a[2][3];		//2차원 배열
// p=a;		이건 차원이 다르기 때문에 쓸 수 없다
p=*a;		//둘 다 1차원으로 맞춰줍니다. a[0], *a, a[2][2]으로 쓸 수도 있습니다.




p, *p, &p, p[0]의 의미는 확실히